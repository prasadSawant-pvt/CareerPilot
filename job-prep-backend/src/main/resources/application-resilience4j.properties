# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.skillResourcesService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.skillResourcesService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.skillResourcesService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.skillResourcesService.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.skillResourcesService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.skillResourcesService.waitDurationInOpenState=30s
resilience4j.circuitbreaker.instances.skillResourcesService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.skillResourcesService.slowCallRateThreshold=50
resilience4j.circuitbreaker.instances.skillResourcesService.slowCallDurationThreshold=3s

# Retry Configuration
resilience4j.retry.instances.skillResourcesService.maxAttempts=3
resilience4j.retry.instances.skillResourcesService.waitDuration=1s
resilience4j.retry.instances.skillResourcesService.enableExponentialBackoff=true
resilience4j.retry.instances.skillResourcesService.exponentialBackoffMultiplier=2

# Time Limiter Configuration
resilience4j.timelimiter.instances.skillResourcesService.timeoutDuration=10s
resilience4j.timelimiter.instances.skillResourcesService.cancelRunningFuture=true

# Actuator Endpoints
management.endpoints.web.exposure.include=health,info,metrics,circuitbreakers,retries
management.endpoint.health.show-details=always
management.endpoint.health.circuitbreakers.enabled=true
management.health.circuitbreakers.enabled=true

# Enable Spring Retry
spring.retry.enabled=true
